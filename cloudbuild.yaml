steps:
  # Step 0: Install Chrome and matching ChromeDriver from official source
  - name: 'ubuntu'
    id: 'Install Chrome & ChromeDriver'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update -y && apt-get install -y \
        wget unzip curl gnupg software-properties-common fonts-liberation \
        libasound2t64 libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 \
        libcups2 libdbus-1-3 libdrm2 libgbm1 libgtk-4-1 libnspr4 libnss3 \
        libu2f-udev libvulkan1 libxcomposite1 libxdamage1 libxfixes3 \
        libxkbcommon0 libxrandr2 xdg-utils xvfb

        # Download and install Chrome for Testing (official build)
        wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/121.0.6167.85/linux64/chrome-linux64.zip
        unzip chrome-linux64.zip
        rm chrome-linux64.zip
        mv chrome-linux64 /opt/chrome
        ln -s /opt/chrome/chrome /usr/local/bin/google-chrome

        # Download and install matching Chromedriver (official build)
        wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/121.0.6167.85/linux64/chromedriver-linux64.zip
        unzip -j chromedriver-linux64.zip chromedriver-linux64/chromedriver
        rm chromedriver-linux64.zip
        mv chromedriver /usr/bin/chromedriver
        chmod +x /usr/bin/chromedriver

        # Confirm they are usable
        file /usr/bin/chromedriver
        google-chrome --version
        chromedriver --version

  # Step 1: Compile the project
  # - name: 'gcr.io/cloud-builders/mvn'
  #   id: 'Compile'
  #   args: ['clean', 'compile']

  # Step 2: Run Selenium tests with headless X display
  - name: 'gcr.io/cloud-builders/mvn'
    id: 'Run Tests'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        Xvfb :99 & export DISPLAY=:99
        echo "Running tests with DISPLAY=$$DISPLAY"
        mvn test

  # Step 3: Package the application
  - name: 'gcr.io/cloud-builders/mvn'
    id: 'Package App'
    args: ['package']

artifacts:
  objects:
    location: 'gs://s224169428/sit707/'
    paths: ['target/*.jar']

options:
  logging: CLOUD_LOGGING_ONLY
