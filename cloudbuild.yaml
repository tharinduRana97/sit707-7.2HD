steps:
  # Pull Maven cache
  - id: 'pull maven cahche'
    name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Pulling Maven cache..."
        gsutil -m cp -r gs://s224169428/maven_cache/.m2 /workspace/ || echo "No existing cache."

  - id: 'compile'
    name: 'gcr.io/cloud-builders/mvn'
    args: ['compile']

  # Start services and build images
  - id: 'start application for test'
    name: 'docker/compose:1.29.2'
    args: ['up', '-d', '--build']

  # Run integration tests
  - id: 'Tests'
    name: 'docker/compose:1.29.2'
    args:
      - 'run'
      - '--rm'
      - '-e'
      - 'MAVEN_CONFIG=/workspace/.m2'
      - 'book-test-runner'
      - 'mvn'
      - 'test'

  # Save Maven cache
  - id: 'save cache'
    name: 'gcr.io/cloud-builders/gsutil'
    args: ['-m', 'cp', '-r', '/workspace/.m2', 'gs://s224169428/sit707/maven_cache/']

  # Package JAR
  - id: 'Package'
    name: 'gcr.io/cloud-builders/mvn'
    args: ['package', '-DskipTests=true']

  # Build Docker image
  - id: 'Dockerize'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/book-app:latest', '.']

  # Push Docker image
  - id: 'Push to repository'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/book-app:latest']

  # Deploy to Cloud Run
  - id: 'Deploy'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'book-app'
      - '--image=gcr.io/$PROJECT_ID/book-app:latest'
      - '--platform=managed'
      - '--region=us-central1'
      - '--allow-unauthenticated'
      
options:
  logging: CLOUD_LOGGING_ONLY

artifacts:
  objects:
    location: 'gs://s224169428/sit707/'
    paths: ['target/*.jar']
